name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    name: >-
      CI | python v${{ matrix.python-version }},
      django v${{matrix.django-version}},
      postgres v${{ matrix.postgres-version }}
      ${{ matrix.experimental && '(experimental)' || '' }}

    continue-on-error: ${{ matrix.experimental }}

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        postgres-version: ["12", "13", "14", "15", "16"]
        django-version: ["3.2", "4.2", "5.0"]
        experimental: [false]
        exclude:
          - python-version: "3.11"
            django-version: "3.2"
          - python-version: "3.12"
            django-version: "3.2"
        # include:
        #   - python-version: "3.13"
        #     postgres-version: "16"
        #     django-version: "5"
        #     experimental: true
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip setuptools poetry
          poetry install --with dev

      - name: Run Tests
        env:
          POSTGRES_VERSION: ${{ matrix.postgres-version }}
          PYTHON_IMAGE_TAG: "${{ matrix.python-version }}-slim"
          DJANGO_VERSION: "${{ matrix.django-version }}"
        run: |
          docker compose run --build  testapp "./run-tests.sh"
